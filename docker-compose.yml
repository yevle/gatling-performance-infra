version: '3.8'
services:
  grafana:
    container_name: grafana
    image: grafana/grafana
    networks:
      - framework_net
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
    volumes:
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    restart: always
    links:
      - influxdb:influxdb
  influxdb:
    image: influxdb
    build: ./influxdb
    container_name: influxdb
    volumes:
      - influxdb:/var/lib/influxdb
    networks:
      - framework_net
    ports:
      - "8086:8086"
      - "2003:2003"
      - "2005:2005"
    restart: always

  jenkins:
    build: ./jenkins
#    depends_on:
#      - docker-dind
    container_name: jenkins
    networks:
      - framework_net
    ports:
      - "8080:8080"
      - "50000:50000"
    environment:
      - JENKINS_ADMIN_LOGIN=admin
      - JENKINS_ADMIN_PASSWORD=admin
    volumes:
#      - docker-dind:/usr/local/bin/dind/
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins-home:/var/jenkins_home
    restart: always
  jenkins-agent:
    build: ./jenkins-agent
    container_name: jagent-gatling
    privileged: true
    networks:
      - framework_net
    volumes:
      - jenkins-agent:/agent
  jenkins-agent-lh:
    build: ./jenkins-agent-lh
    container_name: jagent-lighthouse
    privileged: true
    networks:
      - framework_net
    volumes:
      - jenkins-agent-lh:/agent

#  docker-dind:
#    image: docker:dind
#    networks:
#      - framework_net
#    volumes:
#      - docker-dind:/usr/local/bin
#    container_name: docker-dind
#    privileged: true
#    restart: always
#    
#  lighthouse:
#    container_name: lighthouse
#    build: ./lighthouse
#    networks:
#      - framework_net
#    depends_on:
#      - influxdb
#    volumes:
#      - lighthouse:/lighthouse/report
#    env_file:
#      - ./lighthouse/.env

#  gatling:
#    container_name: gatling
#    build: ./gatling
#    image: "eclipse-temurin:8-jdk"
#    privileged: true
#     networks:
#       - framework_net
#    entrypoint:
#      - cat

## Uncomment to use Prometheus host performance monitoring tool
#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    restart: unless-stopped
#    networks:
#      - framework_net
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#      - prometheus_data:/prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
#      - '--web.console.libraries=/etc/prometheus/console_libraries'
#      - '--web.console.templates=/etc/prometheus/consoles'
#      - '--web.enable-lifecycle'
#    depends_on:
#      - cadvisor
#  cadvisor:
#    image: gcr.io/cadvisor/cadvisor:v0.47.2
#    container_name: cadvisor
#    privileged: true
#    networks:
#      - framework_net
#    ports:
#      - "8010:8010"
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#      - /var/lib/docker/:/var/lib/docker:ro
#      - /var/run/docker.sock:/var/run/docker.sock

## Uncomment to use NewRelic host performance monitoring agent. Need to add License Key to newrelic-infra.yml.
#  agent:
#    container_name: newrelic-infra
#    build:
#      context: .
#      dockerfile: newrelic-infra/newrelic-infra.dockerfile
#    cap_add:
#      - SYS_PTRACE
#    network_mode: host
#    pid: host
#    privileged: true
#    volumes:
#      - "/:/host:ro"
#      - "/var/run/docker.sock:/var/run/docker.sock"
#    restart: unless-stopped

## Uncomment to use DataDog host performance monitoring agent. Need to add API Key to environment variable.
#  datadog:
#    container_name: ddagent
#    image: gcr.io/datadoghq/agent:latest
#    pid: host
#    privileged: true
#    environment:
#      - DD_API_KEY=<Edit_Key>
#      - DD_SITE=datadoghq.eu
#      - DD_LOGS_ENABLED=true
#      - DD_APM_ENABLED=true
#      - DD_APM_NON_LOCAL_TRAFFIC=true
#      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
#      - DD_DOGSTATSD_SOCKET=/opt/datadog/apm/inject/run/dsd.socket
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - /proc/:/host/proc/:ro
#      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
#      - /var/lib/docker/containers:/var/lib/docker/containers:ro

volumes:
  jenkins-home:
  jenkins-agent:
  jenkins-agent-lh:
  influxdb:
  prometheus_data: {}
#  docker-dind:
#  lighthouse:

networks:
  framework_net:
    name: framework_net
    driver: bridge